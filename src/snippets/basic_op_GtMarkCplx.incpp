  auto right = dynamic_cast<Data_*> (r);

  const auto nEl = static_cast<OMPInt>(N_Elements());
  assert(nEl);
  if (nEl == 1) {
    if (std::norm((*this)[0]) < std::norm((*right)[0])) (*this)[0] = (*right)[0];
    return this;
  }

  if ((GDL_NTHREADS=parallelize( nEl))==1) {
    for (OMPInt i = 0; i < nEl; ++i) if (std::norm((*this)[i]) < std::norm((*right)[i])) (*this)[i] = (*right)[i];
  } else {
    TRACEOMP(__FILE__, __LINE__)
#pragma omp parallel for num_threads(GDL_NTHREADS) default(none) shared(nEl, right)
    for (OMPInt i = 0; i < nEl; ++i) if (std::norm((*this)[i]) < std::norm((*right)[i])) (*this)[i] = (*right)[i];
  }
  return this;